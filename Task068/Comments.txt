Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
m = 2, n = 3 -> A(m,n) = 9
m = 3, n = 2 -> A(m,n) = 29

=======================================================================================


using System;
 class Program
{
    static int Ackermann(int m, int n)
    {
        if (m == 0)
        {
            return n + 1;
        }
        else if (m > 0 && n == 0)
        {
            return Ackermann(m - 1, 1);
        }
        else
        {
            return Ackermann(m - 1, Ackermann(m, n - 1));
        }
    }
     static void Main(string[] args)
    {
        int m = 2;
        int n = 3;
        int result = Ackermann(m, n);
        Console.WriteLine($"A({m}, {n}) = {result}");
         m = 3;
        n = 2;
        result = Ackermann(m, n);
        Console.WriteLine($"A({m}, {n}) = {result}");
    }
}
=====================================================================

В этой программе функция  Ackermann  рекурсивно вычисляет значение функции Аккермана для заданных значений  m  и  n . Если  m  равно 0, то возвращается  n + 1 . Если  m  больше 0 и  n  равно 0, то рекурсивно вызывается функция с аргументами  m - 1  и 1. В остальных случаях рекурсивно вызывается функция с аргументами  m - 1  и  Ackermann(m, n - 1) . В функции  Main  приведены примеры использования, где вычисляются значения функции Аккермана для заданных значений  m  и  n .

==============================================================================================


Функция Аккермана обычно определяется рекурсивно, то есть явно задаётся для некоторых начальных значений, после чего описывается алгоритм получения дальнейших значений функции из уже рассчитанных.

Изначально Аккерман определил функцию довольно громоздко, но вскоре дал следующее эквивалентное определение:

